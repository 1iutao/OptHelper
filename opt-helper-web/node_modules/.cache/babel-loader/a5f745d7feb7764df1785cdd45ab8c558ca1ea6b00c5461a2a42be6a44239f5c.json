{"ast":null,"code":"export default {\n  data() {\n    return {\n      loginForm: {\n        username: \"username\",\n        password: \"password\"\n      },\n      //校验\n      loginRules: {\n        username: [{\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 12,\n          message: '长度在 6 到 12 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    //重置\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    },\n    //登录\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return;\n        const {\n          data: res\n        } = await this.$http.post(\"user/login\", this.loginForm);\n        if (res.code == 0) {\n          this.$message.success(\"登录成功\");\n          this.$router.push({\n            path: \"/home\"\n          });\n        } else if (res.code == 999) {\n          this.$message.error(\"登录失败\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA2BA;EACAA;IACA;MACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;IACA;EACA;EACAG;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACA;QACA;UAAAZ;QAAA;QACA;UACA;UACA;YAAAa;UAAA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["data","loginForm","username","password","loginRules","required","message","trigger","min","max","methods","resetLoginForm","login","path"],"sourceRoot":"src/components","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login_container\">\r\n    <div class=\"login_box\">\r\n      <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\">\r\n      </div>\r\n<!--      表单-->\r\n      <el-form ref=\"loginFormRef\" :rules=\"loginRules\" :model=\"loginForm\" class=\"login_form\" label-width=\"0\">\r\n<!--        用户名-->\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-usercenter\"></el-input>\r\n        </el-form-item>\r\n<!--        密码-->\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" prefix-icon=\"iconfont icon-password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n<!--        按钮-->\r\n        <el-form-item class=\"butns\">\r\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n          <el-button type=\"reset\" @click=\"resetLoginForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: \"username\",\r\n        password: \"password\"\r\n      },\r\n      //校验\r\n      loginRules: {\r\n        username: [\r\n          { required: true, message: '用户名不能为空', trigger: 'blur' },\r\n          { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '密码不能为空', trigger: 'blur' },\r\n          { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //重置\r\n    resetLoginForm() {\r\n      this.$refs.loginFormRef.resetFields();\r\n    },\r\n    //登录\r\n    login() {\r\n      this.$refs.loginFormRef.validate(async valid => {\r\n        if (!valid) return;\r\n        const {data:res} = await this.$http.post(\"user/login\", this.loginForm);\r\n        if ( res.code == 0) {\r\n          this.$message.success(\"登录成功\");\r\n          this.$router.push({path: \"/home\"});\r\n        }else if (res.code == 999){\r\n          this.$message.error(\"登录失败\");\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login_container{\r\n  background-image: url(../assets/login-background.jpg);\r\n  height: 100%;\r\n}\r\n.login_box{\r\n  width: 450px;\r\n  height: 300px;\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%,-50%);\r\n  .avatar_box{\r\n    width: 130px;\r\n    height: 130px;\r\n    border: 1px solid #eeeeee;\r\n    border-radius: 50%;\r\n    padding: 10px;\r\n    box-shadow: 0 0 10px #ddd;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%,-120%);\r\n    img{\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 50%;\r\n    }\r\n  }\r\n  .butns{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    transform: translate(-30%,70%);\r\n  }\r\n  .login_form{\r\n    position: absolute;\r\n    bottom: 0%;\r\n    width: 100%;\r\n    padding: 0 10px;\r\n    box-sizing: border-box;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}